// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebServer.Models;

namespace WebServer.Migrations
{
    [DbContext(typeof(HotelServicesDbContext))]
    partial class HotelServicesDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("HotelServicesNetCore.Order", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Cost");

                    b.Property<bool>("IsPaid");

                    b.Property<DateTime>("OrderDate");

                    b.Property<string>("ServiceId");

                    b.Property<long>("Units");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("ServiceId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("HotelServicesNetCore.Role", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new { Id = "e29300f5-1d97-443f-a694-2e0f9d5d7f19", Name = "Клиент" },
                        new { Id = "e9dd62d8-02f6-4b7a-bf82-e1f705b59d45", Name = "Администратор" },
                        new { Id = "0539bc82-8ff0-491b-a813-5154a40e72e3", Name = "Управляющий" }
                    );
                });

            modelBuilder.Entity("HotelServicesNetCore.ServiceInfo", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("CostPerUnit");

                    b.Property<string>("ImgSrc");

                    b.Property<bool>("IsDeprecated");

                    b.Property<string>("Measurement");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("ServiceInfos");

                    b.HasData(
                        new { Id = "32b5955c-eb1b-4d57-98bc-cf37c84e4b52", CostPerUnit = 1000m, ImgSrc = "~/images/services/spa.png", IsDeprecated = false, Measurement = "час.", Name = "Спа" },
                        new { Id = "e3534844-1ad8-4c71-90da-4910ff475ff9", CostPerUnit = 2000m, ImgSrc = "~/images/services/eight.png", IsDeprecated = false, Measurement = "час", Name = "Бильярд восьмёрка" },
                        new { Id = "7110e151-8e40-492e-a5a4-7af5cd912053", CostPerUnit = 2000m, ImgSrc = "~/images/services/nine.png", IsDeprecated = false, Measurement = "час", Name = "Бильярд девятка" },
                        new { Id = "51507636-eeeb-4d40-871b-b19c31ca8a76", CostPerUnit = 2000m, ImgSrc = "~/images/services/russian_billiards.png", IsDeprecated = false, Measurement = "час", Name = "Русский бильярд" }
                    );
                });

            modelBuilder.Entity("HotelServicesNetCore.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Fio");

                    b.Property<string>("Login");

                    b.Property<string>("Password");

                    b.Property<string>("RoleId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new { Id = "5233e7aa-968a-45c0-bac9-a1d87a85afa0", Fio = "Петров П.П", Login = "petr", Password = "11111", RoleId = "e29300f5-1d97-443f-a694-2e0f9d5d7f19" },
                        new { Id = "0c408d05-dc94-40b2-b257-098d1974ef65", Fio = "Смирнов П.П", Login = "smr", Password = "22222", RoleId = "e9dd62d8-02f6-4b7a-bf82-e1f705b59d45" },
                        new { Id = "678492b0-d0be-4298-a9e6-38553162813a", Fio = "Симонов П.П", Login = "simon", Password = "33333", RoleId = "0539bc82-8ff0-491b-a813-5154a40e72e3" },
                        new { Id = "ec7038b0-c212-4a94-b8be-32655826cf6e", Fio = "Иванов П.П", Login = "iva", Password = "44444", RoleId = "e29300f5-1d97-443f-a694-2e0f9d5d7f19" },
                        new { Id = "a4d865fa-62d6-48ef-bd61-89de59a4be85", Fio = "Сидоров П.П", Login = "sidor", Password = "55555", RoleId = "e29300f5-1d97-443f-a694-2e0f9d5d7f19" }
                    );
                });

            modelBuilder.Entity("HotelServicesNetCore.Order", b =>
                {
                    b.HasOne("HotelServicesNetCore.ServiceInfo", "Service")
                        .WithMany("Orders")
                        .HasForeignKey("ServiceId");

                    b.HasOne("HotelServicesNetCore.User", "User")
                        .WithMany("Order")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("HotelServicesNetCore.User", b =>
                {
                    b.HasOne("HotelServicesNetCore.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId");
                });
#pragma warning restore 612, 618
        }
    }
}
